/*! gsc - v0.1.9 - 2016-09-06
* https://github.com/GeoSmartCity-CIP/gsc-client
* Copyright (c) 2016; Licensed  EUPL-1.1 */
"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol?"symbol":typeof a},gsc=function(){var a="0.1.0",b="http://hub.geosmartcity.eu/gsc-datacatalogue/datacatalogservlet",c="http://hub.geosmartcity.eu/building/",d={};return d.version=a,d.dcUrl=function(a){return void 0!==a&&(b=a),b},d.uploadUrl=function(a){return void 0!==a&&(c=a),c},d.doPost=function(a,b){return $.post(gsc.dcUrl(),{actionName:a,request:JSON.stringify(b)},null,"json")},d}();gsc.cs=function(){var a={};return a._csUrl="http://geo.mapshakers.com:8080/CrowdSourcing",a.csUrl=function(b){return void 0!==b&&(a._csUrl=b),a._csUrl},a.getConfig=function(){return this.doPost_("/config",null)},a.login=function(a){return this.doPost_("/login",a)},a.eventComment=function(a,b){return this.doPost_("/event/comment/"+b,a)},a.eventUpdate=function(a){return this.doPost_("/event/change",a)},a.eventCreate=function(a){return this.doPostFormData_("/event/create",a)},a.eventListFilter=function(a){return this.doPost_("/event/list",a)},a.doPost_=function(b,c){return $.ajax({url:a._csUrl+"/"+b,type:"POST",data:JSON.stringify(c),dataType:"json"})},a.doPostFormData_=function(b,c){return $.ajax({url:a._csUrl+"/"+b,type:"POST",data:c,processData:!1,contentType:!1})},a}(),gsc.dataset=function(){var a={};return a["delete"]=function(a){return gsc.doPost("deletedataset",{iddataset:a})},a.list=function(a,b,c){var d={};return void 0!==a&&(d.iddatasource=a),void 0!==b&&(d.iddataset=b),void 0!==c&&(d.datasetname=c),gsc.doPost("listdataset",d)},a.create=function(a,b,c,d,e,f,g){void 0===e&&(e=!1),void 0===f&&(f=-1),void 0===g&&(g="");var h={datasetname:a,realname:b,iddatasource:c,description:d,tobeingested:e,refreshinterval:f,url:g};return gsc.doPost("createdataset",h)},a.update=function(a,b,c,d,e,f,g,h){void 0===f&&(f=!1),void 0===g&&(g=-1),void 0===h&&(h="");var i={iddataset:a,datasetname:b,realname:c,iddatasource:d,description:e,tobeingested:f,refreshinterval:g,url:h};return gsc.doPost("updatedataset",i)},a.listCols=function(a){return gsc.doPost("listcols",{iddataset:a})},a.updateCols=function(a,b){return gsc.doPost("updcolsmetadata",{iddataset:a,columns:b})},a.createCron=function(a){return gsc.doPost("createcron",{})},a}(),gsc.datasource=function(){var a={};return a.DatasourceType={ORACLE:"Oracle",SHAPE:"Shape",POSTGIS:"PostGIS"},a.Datasource=function(){},a.create=function(a,b,c,d,e,f,g,h,i,j,k,l){return gsc.doPost("createdatasrc",{datasourcename:a,organization:b,type:c,description:d,updated:e,url:f,username:g,password:h,ipaddress:i,schema:j,port:k,path:l})},a.list=function(a,b,c,d){var e={};return void 0===d&&(d=!1),e.detail=d,gsc.util.isNull(a)||(e.iddatasource=a),gsc.util.isNull(c)||(e.datasourcename=c),gsc.util.isNull(b)||(e.organization=b),void 0===e.iddatasource&&void 0===e.organization?gsc.util.errorPromise("Parameter datasourceId or organization must be present in request"):gsc.doPost("listdatasrc",e)},a["delete"]=function(a){return gsc.doPost("deletedatasrc",{iddatasource:a})},a.update=function(a,b,c,d,e,f,g,h,i,j,k,l,m){return gsc.doPost("updatedatasrc",{iddatasource:a,datasourcename:b,organization:c,type:d,description:e,updated:f,url:g,username:h,password:i,ipaddress:j,schema:k,port:l,path:m})},a.listDataOrigin=function(a){return gsc.doPost("listdataorigin",{iddatasource:a})},a}(),gsc.download=function(){var a={};return a.olMap=null,a.layer=null,a.selectedFeatures=null,a.select=null,a.dragBox=null,a.create=function(b,c){a.olMap=b,a.layer=c,a.select=new ol.interaction.Select,a.olMap.addInteraction(a.select),a.selectedFeatures=a.select.getFeatures(),a.dragBox=new ol.interaction.DragBox({condition:ol.events.condition.platformModifierKeyOnly,style:new ol.style.Style({stroke:new ol.style.Stroke({color:[0,0,255,1]})})}),a.olMap.addInteraction(a.dragBox),a.dragBox.on("boxend",function(){var b=a.dragBox.getGeometry().getExtent();a.layer.getSource().forEachFeatureIntersectingExtent(b,function(b){a.selectedFeatures.push(b)})}),a.dragBox.on("boxstart",function(){a.selectedFeatures.clear()}),a.olMap.on("click",function(){a.selectedFeatures.clear()})},a.addLayer=function(b){a.removeLayer(),a.layer=b},a.removeLayer=function(){a.layer=null},a.kml=function(){var b=new ol.format.KML;return b.writeFeatures(a.selectedFeatures.getArray())},a.gml=function(b){return b.writeFeatures(a.selectedFeatures.getArray())},a.gpx=function(){var b=new ol.format.GPX;return b.writeFeatures(a.selectedFeatures.getArray())},a.json=function(){var b=new ol.format.GeoJSON;return b.writeFeatures(a.selectedFeatures.getArray())},a.wkt=function(){var b=new ol.format.WKT;return b.writeFeatures(a.selectedFeatures.getArray())},a}(),gsc.editFeatures=function(){var a={};a.container=null,a.content=null,a.closer=null,a.buttonClass=null,a.formatWFS=null,a.formatGML=null,a.layer=null,a.olMap=null,a.wfs=null,a.selectedFeature=null;var b=[];return a.editingFeature={},a.interaction=null,a.popupContent=null,a.overlay=null,a.interactionSingleSelect=new ol.interaction.Select({style:new ol.style.Style({stroke:new ol.style.Stroke({color:"#FF2828"})}),toggleCondition:ol.events.condition.never}),a.interactionMultipleSelect=new ol.interaction.Select({style:new ol.style.Style({stroke:new ol.style.Stroke({color:"#FF2828"})})}),a.interactionSnap=null,a.create=function(b,c,d,e,f,g){a.container=b,a.content=c,a.closer=d,a.buttonClass=e,a.formatWFS=new ol.format.WFS,a.olMap=f,a.wfs=g,a.overlay=new ol.Overlay({element:a.container.get(0),autoPan:!0,autoPanAnimation:{duration:250}}),a.olMap.addOverlay(a.overlay),a.interactionMultipleSelectPointerMove=new ol.interaction.Select({condition:ol.events.condition.pointerMove}),a.olMap.addInteraction(a.interactionMultipleSelectPointerMove),a.closer.click(function(){return a.overlay.setPosition(void 0),a.closer.blur(),!1})},a.addLayer=function(b,c){a.removeLayer(),a.layer=b,a.changeSnapLayer(),a.formatGML=c},a.removeLayer=function(){a.layer=null,a.formatGML=null},a.changeSnapLayer=function(){a.interactionSnap=new ol.interaction.Snap({pixelTolerance:5,source:a.layer.getSource()})},a.transactWFS=function(b,c){var d;switch(b){case"insert":d=a.formatWFS.writeTransaction([c],null,null,a.formatGML);break;case"update":var e=c.clone();e.getGeometry().applyTransform(function(a,b,c){for(var d=0;d<a.length;d+=c){var e=a[d],f=a[d+1];a[d]=f,a[d+1]=e}}),e.setId(c.getId()),d=a.formatWFS.writeTransaction(null,[e],null,a.formatGML);break;case"delete":d=a.formatWFS.writeTransaction(null,null,[c],a.formatGML)}var f=new XMLSerializer,g=f.serializeToString(d);$.ajax(a.wfs,{type:"POST",dataType:"xml",processData:!1,contentType:"text/xml",data:g}).done(function(){a.layer.getSource().clear()})},$("button").click(function(){switch(a.olMap.removeInteraction(a.interaction),a.interactionMultipleSelect.getFeatures().clear(),a.interactionSingleSelect.getFeatures().clear(),a.olMap.removeInteraction(a.interactionMultipleSelect),a.olMap.removeInteraction(a.interactionSingleSelect),$(this).attr("id")){case"btnEdit":a.olMap.addInteraction(a.interactionMultipleSelect),a.interaction=new ol.interaction.Modify({features:a.interactionMultipleSelect.getFeatures()}),a.olMap.addInteraction(a.interaction),a.olMap.addInteraction(a.interactionSnap),a.editingFeature={},a.interactionMultipleSelect.getFeatures().on("add",function(b){b.element.on("change",function(b){a.editingFeature[b.target.getId()]=!0})}),a.interactionMultipleSelect.getFeatures().on("remove",function(b){var c=b.element;if(a.editingFeature[c.getId()]){delete a.editingFeature[c.getId()];var d=c.getProperties();delete d.boundedBy;var e=new ol.Feature(d);e.setId(c.getId()),a.transactWFS("update",e)}});break;case"btnEditAttributes":a.olMap.addInteraction(a.interactionSingleSelect),a.interactionSingleSelect.on("select",function(c){if(1==c.selected.length){a.selectedFeature=c.selected[0],a.popupContent="",b=[],a.popupContent='<table id="feature" class="table table-bordered table-hover" style="clear: both"><tbody>',Object.getOwnPropertyNames(a.selectedFeature.getProperties()).forEach(function(c,d,e){if("bbox"!=c&&"geometry"!=c){var f=0;b.push(c),a.popupContent+='<tr><td width="35%">'+c+'</td><td width="65%"><a href="#" id="'+c+'" class="edit'+f+'" data-type="text">'+a.selectedFeature.getProperties()[c]+"</a></td></tr>",f++}}),a.popupContent+="</tbody></table><script>",a.popupContent+='$.fn.editable.defaults.mode = "inline";',a.popupContent+="$(document).ready(function() {",b.forEach(function(c,d,e){a.popupContent+='\t$(".edit'+d+'").editable({',a.popupContent+='type: "text",',a.popupContent+='title: "'+b[d]+'",',a.popupContent+="success: function(response, newValue) {",a.popupContent+='gsc.editFeatures.selectedFeature.set("'+b[d]+'", newValue, false);',a.popupContent+='gsc.editFeatures.transactWFS("update", gsc.editFeatures.selectedFeature);',a.popupContent+="}",a.popupContent+="})"}),a.popupContent+="});</script>",a.content.html(a.popupContent);var d=a.selectedFeature.getGeometry().getClosestPoint(c.mapBrowserEvent.coordinate);a.overlay.setPosition(d)}});break;case"btnPoint":a.interaction=new ol.interaction.Draw({type:"Point",source:a.layer.getSource()}),a.olMap.addInteraction(a.interaction),a.olMap.addInteraction(a.interactionSnap),a.interaction.on("drawend",function(b){a.transactWFS("insert",b.feature)});break;case"btnLine":a.interaction=new ol.interaction.Draw({type:"LineString",source:a.layer.getSource()}),a.olMap.addInteraction(a.interaction),a.olMap.addInteraction(a.interactionSnap),a.interaction.on("drawend",function(b){a.transactWFS("insert",b.feature)});break;case"btnArea":a.interaction=new ol.interaction.Draw({type:"Polygon",source:a.layer.getSource()}),a.interaction.on("drawend",function(b){a.transactWFS("insert",b.feature)}),a.olMap.addInteraction(a.interaction),a.olMap.addInteraction(a.interactionSnap);break;case"btnDelete":a.interaction=new ol.interaction.Select,a.interaction.getFeatures().on("add",function(b){a.transactWFS("delete",b.target.item(0)),a.interactionMultipleSelectPointerMove.getFeatures().clear(),a.interaction.getFeatures().clear()}),a.olMap.addInteraction(a.interaction),a.olMap.addInteraction(a.interactionSnap)}}),a}();var gsc=gsc||{};gsc.geocode=gsc.geocode||{},gsc.geocode.geocode=function(a){return[{name:"Brussels",lon:1,lat:2,match:50}]},gsc.geocode.reverseGeocode=function(a,b,c){return[{name:"Brussels",lon:1,lat:2,distance:100}]};var gsc=gsc||{};gsc.Response=function(a,b){return void 0===a&&(a="error"),void 0===b&&(b=""),{status:a,description:b}},gsc.layer=function(){var a={};return a.create=function(a,b,c,d,e){return gsc.doPost("createlyr",{layername:a,iddataset:b,description:c,metadatafile:d,sld:e})},a.update=function(a,b,c,d,e,f){return gsc.doPost("updatelyr",{idlayer:a,layername:b,iddataset:c,description:d,metadatafile:e,sld:f})},a["delete"]=function(a){return gsc.doPost("deletelyr",{idlayer:a})},a.list=function(a,b,c){var d={};return void 0!==a&&null!==a&&(d.iddataset=a),void 0!==b&&null!==b&&(d.idlayer=b),void 0!==c&&null!==c&&(d.layername=c),gsc.doPost("listlyr",d)},a}(),gsc.map=function(){var a={};return a.olMap=null,a.mapOptions_=null,a.create=function(b,c){a.mapOptions_=c,a.layers_=c.layers||[];var d=new ol.proj.Projection({code:c.epsg,units:c.units});a.olMap=new ol.Map({controls:ol.control.defaults({attribution:!1}),layers:a.layers_,target:b,view:new ol.View({projection:d})}),a.mapOptions_.bounds&&a.olMap.getView().fit(a.mapOptions_.bounds,a.olMap.getSize())},a.addLayer=function(b){a.olMap.addLayer(b),a.layers_.push(b)},a.getDomElement=function(){return $(a.olMap.getViewport())},a.getOlMap=function(){return a.olMap},a.redraw=function(){a.olMap.getLayers().forEach(function(a){a.redraw()})},a.removeLayer=function(b){a.olMap.removeLayer(b),a.layers_=a.layers_.filter(function(a){return a!==b})},a.fit=function(b){a.olMap.getView().fit(b,a.olMap.getSize())},a.addMousePositionControl=function(b){var c=new ol.control.MousePosition({className:"custom-mouse-position",target:document.getElementById(b),coordinateFormat:ol.coordinate.createStringXY(5),undefinedHTML:"&nbsp;"});a.olMap.addControl(c)},a.addScaleBarControl=function(b){a.olMap.getView().on("change:resolution",function(c){var d=c.target.get("resolution"),e=a.olMap.getView().getProjection().getUnits(),f=25.4/.28,g=ol.proj.METERS_PER_UNIT[e],h=d*g*39.37*f;h=h>=9500&&h<=95e4?Math.round(h/1e3)+"K":h>=95e4?Math.round(h/1e6)+"M":Math.round(h),document.getElementById(b).innerHTML="Scale = 1 : "+h}),a.olMap.getView().setZoom(a.olMap.getView().getZoom()+1),a.olMap.getView().setZoom(a.olMap.getView().getZoom()-1)},a.infoOnFeatureEvent=function(b){document.getElementById(this.nodelist).innerHTML="Loading... please wait...";var c=a.olMap.getView(),d=c.getResolution(),e=this.layer.getSource(),f=e.getGetFeatureInfoUrl(b.coordinate,d,c.getProjection(),{INFO_FORMAT:"text/html",FEATURE_COUNT:this.maxFeaturesNumber});f&&(document.getElementById(this.nodelist).innerHTML='<iframe seamless src="'+f+'"></iframe>')},a.addInfoOnFeatureEvent=function(b,c,d){var e={nodelist:b,maxFeaturesNumber:c,layer:d};a.olMap.on("singleclick",a.infoOnFeatureEvent,e)},a.removeInfoOnFeatureEvent=function(){a.olMap.on("singleclick",a.infoOnFeatureEvent)},a.filterOnAttributes=function(b,c){var d={FILTER:null,CQL_FILTER:null,FEATUREID:null};""!==c.replace(/^\s\s*/,"").replace(/\s\s*$/,"")&&("cql"===b&&(d.CQL_FILTER=c),"ogc"===b&&(d.FILTER=c),"fid"===b&&(d.FEATUREID=c)),a.olMap.getLayers().forEach(function(a){a.getSource().updateParams(d)})},a.resetFilter=function(){a.filterOnAttributes("cql","")},a}(),gsc.organization=function(){var a={};return a.create=function(a,b){return gsc.doPost("createorg",{organizationname:a,description:b})},a.list=function(a){var b={};return null!==a&&void 0!==a&&(b.organizationname=a),gsc.doPost("listorg",b)},a["delete"]=function(a){return gsc.doPost("deleteorg",{idorganization:a})},a.update=function(a,b,c){return gsc.doPost("updateorg",{idorganization:a,organizationname:b,description:c})},a}();var gsc=gsc||{};gsc.routing=gsc.routing||{},gsc.routing.routing=function(a,b,c,d){var e="http:/hub.geosmartcity.eu/GironaRouting/geo/RestService/getroute?";e+="x1="+a+"&y1="+b+"&x2="+c+"&y2="+d,console.log(e);var f=new ol.layer.Vector({source:new ol.source.Vector({url:e,format:new ol.format.GeoJSON})});return f};var gsc=gsc||{};gsc.upload={version:"1.0.0",fileSize:8e6},gsc.upload.uploadForm=function(a){var b="<div class='upload'>\n        <form role='form'>\n          <h4>Upload file</h4>\n          <div class='upload-file'>\n            <div class='input-group'>\n              <span class='input-group-btn'>\n            <span class='btn btn-primary btn-file'>\n            Browse... \n            <input type='file' required='true' id='geometryFile' accept='.gml, .kml, .zip'>\n            </span>\n              </span>\n              <input type='text' class='form-control' style='width: 20%'\n                readonly>\n            </div>\n            <span class='help-block'>\n            Select .gml, .kml, .zip (containing .shp, .shx, and .dbf )  \n            </span>\n          </div>\n          <div class='epsg'>\n            <div class='input-group'>\n              <span class='input-group-addon' id='basic-addon1'>&#128196;\n            </span>\n              <input type='text' required='true' id='epsg' class='form-control numbersOnly'\n                style='width: 20%' placeholder='EPSG'\n                aria-describedby='basic-addon1'>\n            </div>\n            <span class='help-block'>\n            Provide EPSG for the reference system\n            </span>\n          </div>\n          <div class='building-height collapse'>\n            <div class='input-group'>\n              <span class='input-group-addon' id='basic-addon1'>&#127970;\n            </span>\n              <input type='text' required='true' id='height' class='form-control numbersOnly'\n                style='width: 20%' placeholder='Height'\n                aria-describedby='basic-addon1'>\n            </div>\n            <span class='help-block'>\n            Provide height of the building in meters\n            </span>\n          </div>\n          <div class='inspireIdLoc'>\n            <div class='input-group'>\n              <span class='input-group-addon' id='basic-addon1'>&#128448;\n            </span>\n              <input type='text' id='inspireIdLoc' class='form-control'\n                style='width: 20%'\n                aria-describedby='basic-addon1'>\n            </div>\n            <span class='help-block'>\n            Field that contains the localId for Inspire\n            </span>\n          </div>\n          <div class='inspireIdName'>\n            <div class='input-group'>\n              <span class='input-group-addon' id='basic-addon1'>&#128448;\n            </span>\n              <input type='text' id='inspireIdName' class='form-control'\n                style='width: 20%'\n                aria-describedby='basic-addon1'>\n            </div>\n            <span class='help-block'>\n            Field that contains the namespace for Inspire\n            </span>\n          </div>\n          <button type='submit' class='btn btn-primary '>Submit</button>\n        </form>\n        <div class='progress'>\n          <div class='progress-bar' aria-valuenow='0'\n            aria-valuemin='0' aria-valuemax='100'\n            id='progressbar' style='min-width: 2em; width: 0'>0%</div>\n        </div>\n        <div class='alert collapse' id='alert' role='alert'>...</div>\n      </div>";jQuery(a).html(b);var c="<script>\n      jQuery(document).on('change', '.btn-file :file', function() {\n        var input = jQuery(this); \n        var label = input.val();\n        if (label.substring(3, 11) == 'fakepath') {\n          label = label.substring(12);\n        }\n        input.trigger('fileselect', [label]);\n      });\n      \n      jQuery(document).ready(function() {\n        jQuery('.btn-file :file').on('fileselect', function(event,\n          label) {\n          jQuery('#progressbar').width('0%').text('0%');\n          jQuery('#alert').addClass('collapse').removeClass(\n            'alert-danger alert-success').text('');\n          var input = jQuery(this).parents('.input-group').find(\n            ':text');\n          var extension = label.substr(-3, 3);\n          if (extension === 'zip' || extension === 'gml') {\n            jQuery('.building-height').removeClass('collapse');\n          } else {\n            jQuery('.building-height').addClass('collapse');\n          }\n          if (input.length) {\n            input.val(label);\n          } else {\n            if (label) {\n              alert(label);\n            }\n          }\n        });\n      });\n      \n      jQuery('.numbersOnly').keyup(function() {\n        if (jQuery.isNumeric(this.value) === false) {\n          this.value = this.value.slice(0, -1);\n        }\n      });\n      \n      progressCallback = function(progress) {\n        if (progress > 0) {\n          jQuery('#progressbar').width(progress + '%').text(progress +\n            ' %');\n        }\n      };\n      \n      successCallback = function(success) {\n        jQuery('#alert').removeClass('collapse').addClass('alert-success')\n          .text('Upload successful');\n      };\n      \n      failedCallback = function(error) {\n        if(error == undefined){\n            error = '';\n        }\n        jQuery('#alert').removeClass('collapse').addClass('alert-danger')\n          .text('Upload failed ' + error);\n      };\n      \n      jQuery('form').on('submit', function(e) {\n        e.preventDefault();\n        jQuery('#progressbar').width('0%').text('0%');\n        jQuery('#alert').addClass('collapse').removeClass(\n          'alert-danger alert-success').text('');\n        var fileToProcess = document.getElementById('geometryFile').files[\n          0];\n        var height = jQuery('#height').val();\n        var epsg = jQuery('#epsg').val();\n        var inspireIdLoc = jQuery('#inspireIdLoc').val();\n        var inspireIdName = jQuery('#inspireIdName').val();\n        var dataToProcess = new gsc.upload.Data(fileToProcess, epsg, height, inspireIdLoc, inspireIdName);\n        dataToProcess.send(progressCallback, successCallback, failedCallback);\n      });\n      </script>";jQuery(function(){jQuery("head").append(c)}),jQuery(".btn-file").css({position:"relative",overflow:"hidden"}),jQuery(".btn-file input[type=file]").css({position:"absolute",top:"0",right:"0","min-width":"100%","min-height":"100%","font-size":"100px","text-align":"right",filter:"alpha(opacity=0)",opacity:"0",background:"red",cursor:"inherit",display:"block"}),jQuery("input[readonly]").css({"background-color":"white !important",cursor:"text !important"}),jQuery(".upload").css({margin:"2em"}),jQuery(".progress").css({"margin-top":"1em",width:"25%"}),jQuery(".alert").css({"margin-top":"1em",width:"25%"})},gsc.upload.Data=function(a,b,c,d,e){void 0===("undefined"==typeof a?"undefined":_typeof(a))?this.file=new File([""],"filename"):this.file=a,this.epsg=b,this.height=c,this.inspireIdLoc=d,this.inspireIdName=e},Object.defineProperty(gsc.upload.Data.prototype,"name",{get:function(){return this.file&&this.file.name}}),Object.defineProperty(gsc.upload.Data.prototype,"lastModifiedDate",{get:function(){return this.file&&this.file.lastModifiedDate}}),Object.defineProperty(gsc.upload.Data.prototype,"size",{get:function(){return this.file&&this.file.size}}),Object.defineProperty(gsc.upload.Data.prototype,"type",{get:function(){return this.file&&this.file.type}}),gsc.upload.Data.prototype.isFileSizeCorrect=function(){return this.size<=gsc.upload.fileSize},gsc.upload.Data.prototype.send=function(a,b,c){if(this.isFileSizeCorrect()){var d=new FormData;d.append("file",this.file,this.name),d.append("epsg",this.epsg),d.append("fieldHeight",this.height),d.append("fieldInspireIdLoc",this.inspireIdLoc),d.append("fieldInspireIdName",this.inspireIdName);var e=new XMLHttpRequest;(a||"function"==typeof a)&&e.upload.addEventListener("progress",function(b){a(parseInt(b.loaded/b.total*100))},!1),(b||"function"==typeof b)&&e.upload.addEventListener("load",function(a){b(a)},!1),(c||"function"==typeof c)&&e.upload.addEventListener("error",function(){400===e.status?c("Format not supported"):c()},!1),e.open("POST",gsc.uploadUrl(),!0),e.send(d)}},gsc.user=function(){var a={};return a.register=function(a,b,c,d,e){return gsc.doPost("reguser",{email:a,username:b,password:c,confirmpassword:d,organizations:e})},a.login=function(a,b){return gsc.doPost("login",{username:a,password:b})},a["delete"]=function(a,b){return gsc.doPost("unreguser",{username:a,password:b})},a.remindPassword=function(a,b){var c={};return void 0!==a&&null!==a?c.email=a:void 0!==b&&null!==b&&(c.username=b),gsc.doPost("remindpwd",c)},a.changePassword=function(a,b,c,d){return gsc.doPost("changepwd",{username:a,oldpassword:b,newpassword:c,confirmnewpassword:d})},a.update=function(a,b,c,d){return gsc.doPost("updateuser",{id:a,email:b,username:c,organizations:d})},a.lock=function(a,b){return void 0===b&&(b=!0),gsc.doPost("lockuser",{username:a,lock:b})},a.verifyEmail=function(a){return gsc.doPost("verifymail",{id:a})},a}();var gsc=gsc||{};gsc.usrdat=gsc.usrdat||{},gsc.usrdat.storeLocation=function(a){return{}},gsc.usrdat.storeRoute=function(a){},gsc.util=gsc.util||{},gsc.util.errorPromise=function(a){var b=jQuery.Deferred();return b.resolve(new gsc.Response("error",a)),b},gsc.util=gsc.util||{},gsc.util.isArrayWithContent=function(a){return!!(void 0!==a&&jQuery.isArray(a)&&a.length>0)},gsc.util.clearExtendArray=function(a,b){a.length=0,jQuery.extend(a,b)},gsc.util.clearExtendObject=function(a,b){jQuery.each(a,function(b,c){a[b]=void 0}),jQuery.extend(a,b)},gsc.util=gsc.util||{},gsc.util.isError=function(a){return void 0!==a.status&&"error"===a.status},gsc.util=gsc.util||{},gsc.util.isNull=function(a){return void 0===a||null===a};