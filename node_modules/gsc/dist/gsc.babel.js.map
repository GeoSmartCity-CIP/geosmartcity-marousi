{"version":3,"sources":["gsc.js"],"names":["gsc","_version","_dcUrl","_uploadUrl","mod","version","dcUrl","undefined","uploadUrl","doPost","actionName","requestData","$","post","request","JSON","stringify","cs","_csUrl","csUrl","getConfig","doPost_","login","data","eventComment","uuid","eventUpdate","eventCreate","formdata","doPostFormData_","eventListFilter","urlPart","ajax","url","type","dataType","formData","processData","contentType","dataset","delete","dataSetId","iddataset","list","dataSourceId","dataSetName","params","iddatasource","datasetname","create","realName","description","toBeIngested","refreshInterval","realname","tobeingested","refreshinterval","update","listCols","updateCols","columnList","columns","createCron","datasource","DatasourceType","ORACLE","SHAPE","POSTGIS","Datasource","datasourcename","organization","updated","username","password","ipaddress","schema","port","path","datasourceId","datasourceName","includeDetail","detail","util","isNull","errorPromise","listDataOrigin","download","olMap","layer","selectedFeatures","select","dragBox","map","ol","interaction","Select","addInteraction","getFeatures","DragBox","condition","events","platformModifierKeyOnly","style","Style","stroke","Stroke","color","on","extent","getGeometry","getExtent","getSource","forEachFeatureIntersectingExtent","feature","push","clear","addLayer","removeLayer","kml","format","KML","writeFeatures","getArray","gml","gpx","GPX","json","GeoJSON","wkt","WKT","editFeatures","container","content","closer","buttonClass","formatWFS","formatGML","wfs","selectedFeature","attTitle","editingFeature","popupContent","overlay","interactionSingleSelect","toggleCondition","never","interactionMultipleSelect","interactionSnap","divContainer","divContent","aCloser","classButton","mapObject","WFS","Overlay","element","get","autoPan","autoPanAnimation","duration","addOverlay","interactionMultipleSelectPointerMove","pointerMove","click","setPosition","blur","changeSnapLayer","Snap","pixelTolerance","source","transactWFS","mode","f","node","writeTransaction","sF","clone","applyTransform","crd","crd2","std","i","length","y","x","setId","getId","xs","XMLSerializer","payload","serializeToString","done","removeInteraction","attr","Modify","features","e","target","featureProperties","getProperties","boundedBy","Feature","evt","selected","Object","getOwnPropertyNames","forEach","val","idx","array","html","popupCoordinates","getClosestPoint","mapBrowserEvent","coordinate","Draw","item","geocode","geonames","name","lon","lat","match","reverseGeocode","srs","distance","Response","status","layerName","metadataFile","sld","layername","metadatafile","layerId","idlayer","param","mapOptions_","divObject","mapOptions","layers_","layers","projection","proj","Projection","code","epsg","units","Map","controls","control","defaults","attribution","view","View","bounds","getView","fit","getSize","getDomElement","getViewport","getOlMap","redraw","getLayers","lyr","filter","value","addMousePositionControl","location","mousePositionControl","MousePosition","className","document","getElementById","coordinateFormat","createStringXY","undefinedHTML","addControl","addScaleBarControl","scalediv","resolution","getProjection","getUnits","dpi","mpu","METERS_PER_UNIT","scale","Math","round","innerHTML","setZoom","getZoom","infoOnFeatureEvent","nodelist","viewResolution","getResolution","getGetFeatureInfoUrl","maxFeaturesNumber","addInfoOnFeatureEvent","opts","removeInfoOnFeatureEvent","filterOnAttributes","filterType","filterParams","replace","CQL_FILTER","FILTER","FEATUREID","updateParams","resetFilter","organizationname","organizationId","idorganization","routing","x1","y1","x2","y2","RoutingUrl","console","log","vectorLayer","Vector","upload","fileSize","uploadForm","selector","jQuery","script","append","css","Data","file","height","inspireIdLoc","inspireIdName","File","defineProperty","prototype","lastModifiedDate","size","isFileSizeCorrect","send","pc","sc","fc","FormData","XMLHttpRequest","addEventListener","parseInt","loaded","total","open","user","register","email","confirmpassword","organizations","remindPassword","changePassword","oldpassword","newpassword","confirmnewpassword","userId","id","lock","verifyEmail","verificationId","usrdat","storeLocation","storeRoute","route","message","p","Deferred","resolve","isArrayWithContent","arrayCandidate","isArray","clearExtendArray","targetArray","sourceArray","extend","clearExtendObject","targetObject","sourceObject","each","key","isError","response","mvar"],"mappings":"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","file":"gsc.babel.js","sourcesContent":["/*! gsc - v0.1.9 - 2016-09-06\n* https://github.com/GeoSmartCity-CIP/gsc-client\n* Copyright (c) 2016; Licensed  EUPL-1.1 */\n'use strict';\n\n/**\n * @namespace gsc\n */\nvar gsc = (function() {\n\n  /**\n   * Version number\n   *\n   * @type {String}\n   * @private\n   * @requires OpenLayers-3.13.1\n   */\n  var _version = '0.1.0';\n\n  /**\n   * URL of the GSC Datacatalog instance the API is working against\n   * @type {String}\n   * @private\n   */\n  var _dcUrl = 'http://hub.geosmartcity.eu/' +\n    'gsc-datacatalogue/datacatalogservlet';\n\n  /**\n   * URL of the GSC Upload Features API\n   * @type {String}\n   * @private\n   */\n  var _uploadUrl = 'http://hub.geosmartcity.eu/building/';\n\n  /**\n   * 'gsc' is the root object of the gsc.js library and the only variable to\n   * be introduced into the global namespace.\n   *\n   * @exports gsc\n   * @memberof gsc\n   */\n  var mod = {};\n\n  /**\n   * Version number of the s4a.js library\n   * @type {Number}\n   */\n  mod.version = _version;\n\n  /**\n   * Get or set GSC Datacatalog URL. If a parameter is supplied,\n   * it is assumed to be a valid URL to the web service end-point of\n   * a GSC Datacatalogue instance.\n   *\n   * If no parameter is provided, the function will return the currently\n   * configured URL.\n   *\n   * @param {String} [dcUrl] URL to working instance of GSC Datacatalogue\n   * @return {String} URL of GSC Datacatalogue instance web service end-point\n   */\n  mod.dcUrl = function(dcUrl) {\n    if (dcUrl !== undefined) {\n      _dcUrl = dcUrl;\n    }\n    return _dcUrl;\n  };\n\n  /**\n   * Get or set GSC Upload feature URL. If a parameter is supplied,\n   * it is assumed to be a valid URL to the upload feature API.\n   *\n   * If no parameter is provided, the function will return the currently\n   * configured URL.\n   *\n   * @param {String} [uploadUrl] URL to upload feature API\n   * @return {String} URL of upload feature API\n   */\n  mod.uploadUrl = function(uploadUrl) {\n    if (uploadUrl !== undefined) {\n      _uploadUrl = uploadUrl;\n    }\n    return _uploadUrl;\n  };\n\n  /**\n   * Execute a HTTP post request and return the resulting promise\n   *\n   * @param {String} actionName Name of action to invoke\n   * @param {Object} requestData  A JSON object with the parameters to send to the web service\n   * @return {Promise.<Object>} a jQuery promise object\n   */\n  mod.doPost = function(actionName,\n    requestData) {\n    return $.post(gsc.dcUrl(), {\n      actionName: actionName,\n      request: JSON.stringify(requestData)\n    }, null, 'json');\n  };\n\n  return mod;\n\n}());\n\n'use strict';\r\n\r\ngsc.cs = (function() {\r\n  /**\r\n   *\r\n   * @exports gsc/cs\r\n   */\r\n  var mod = {};\r\n\r\n  mod._csUrl = 'http://geo.mapshakers.com:8080/CrowdSourcing';\r\n\r\n  /**\r\n   * Get or set GSC CrowdSourcing URL. If a parameter is supplied,.\r\n   *\r\n   * If no parameter is provided, the function will return the currently\r\n   * configured URL.\r\n   *\r\n   * @param {String} [csUrl] URL to working instance of GSC CrowdSourcing Servlet\r\n   * @return {String} URL of GSC CrowdSourcing instance web service end-point\r\n   */\r\n  mod.csUrl =  function(csUrl) {\r\n    if (csUrl !== undefined) {\r\n      mod._csUrl = csUrl;\r\n    }\r\n    return mod._csUrl;\r\n  };\r\n\r\n  /**\r\n   * Receive a config file\r\n   *\r\n   * @return {Promise.<Object>} a jQuery promise object\r\n   */\r\n  mod.getConfig = function() {\r\n    return this.doPost_('/config', null);\r\n  };\r\n\r\n  /**\r\n   * Login to cs API\r\n   *\r\n   * @param {JSON} data (Username and Password)\r\n   * @return {Promise.<Object>} a jQuery promise object\r\n   */\r\n  mod.login = function(data) {\r\n    return this.doPost_('/login', data);\r\n  };\r\n\r\n  /**\r\n   * Create a comment\r\n   *\r\n   * @param {JSON} data The JSON data object\r\n   * @param {String} uuid Identification string of event\r\n   * @return {Promise.<Object>} a jQuery promise object\r\n   */\r\n  mod.eventComment =  function(data, uuid) {\r\n    return this.doPost_('/event/comment/' + uuid, data);\r\n  };\r\n\r\n  /**\r\n   * Update an event\r\n   *\r\n   * @param {JSON} data The JSON data object\r\n   * @return {Promise.<Object>} a jQuery promise object\r\n   */\r\n  mod.eventUpdate =  function(data) {\r\n    return this.doPost_('/event/change', data);\r\n  };\r\n\r\n  /**\r\n   * Create an event\r\n   *\r\n   * @param {FormData} formdata The FormData object (JSON + attachment)\r\n   * @return {Promise.<Object>} a jQuery promise object\r\n   */\r\n  mod.eventCreate =  function(formdata) {\r\n    return this.doPostFormData_('/event/create', formdata);\r\n  };\r\n\r\n  /**\r\n   * Filter list\r\n   **\r\n   * @param {JSON} data The JSON data object\r\n   * @return {Promise.<Object>} a jQuery promise object\r\n   */\r\n  mod.eventListFilter =  function(data) {\r\n    return this.doPost_('/event/list', data);\r\n  };\r\n\r\n  /**\r\n   * send POST requests\r\n   *\r\n   * @private\r\n   * @param {String} urlPart - Service url.\r\n   * @param {Object} data The JSON data object\r\n   * @return {Promise.<Object>} a jQuery promise object\r\n   *\r\n   */\r\n  mod.doPost_ =  function(urlPart, data) {\r\n    return $.ajax({\r\n      url: mod._csUrl + '/' + urlPart ,\r\n      type: 'POST',\r\n      data: JSON.stringify(data),\r\n      dataType: 'json'\r\n    });\r\n  };\r\n\r\n  /**\r\n   * send POST formdata requests\r\n   *\r\n   * @private\r\n   * @param {String} urlPart - Service url.\r\n   * @param {FormData} formData The JSON data object\r\n   * @return {Promise.<Object>} a jQuery promise object\r\n   *\r\n   */\r\n  mod.doPostFormData_ =  function(urlPart, formData) {\r\n    return $.ajax({\r\n      url: mod._csUrl + '/' + urlPart ,\r\n      type: 'POST',\r\n      data: formData,\r\n      processData: false,\r\n      contentType: false\r\n    });\r\n  };\r\n\r\n  return mod;\r\n\r\n}());\r\n\n'use strict';\n\ngsc.dataset = (function() {\n  /**\n   * @exports gsc/dataset\n   */\n  var mod = {};\n\n  /**\n   * Delete a data source\n   *\n   * @param {Number} dataSetId - Id of dataset\n   * @return {Promise} Response\n   */\n  mod.delete = function(dataSetId) {\n\n    return gsc.doPost('deletedataset', {\n      iddataset: dataSetId\n    });\n\n  };\n\n  /**\n   * List/search for data sets\n   *\n   * @param {Number} [dataSourceId] - Id of data source to retrieve data sets for\n   * @param {Number} [dataSetId] - Id of data set to retrieve\n   * @param {String} [dataSetName] - Name or part of data set name to search for\n   * @return {Promise} Data set response\n   */\n  mod.list = function(dataSourceId,\n          dataSetId,\n          dataSetName) {\n\n    var params = {};\n\n    if (dataSourceId !== undefined) {\n      params.iddatasource = dataSourceId;\n    }\n\n    if (dataSetId !== undefined) {\n      params.iddataset = dataSetId;\n    }\n\n    if (dataSetName !== undefined) {\n      params.datasetname = dataSetName;\n    }\n\n    return gsc.doPost('listdataset', params);\n\n  };\n\n  /**\n   * Create a new data set\n   *\n   * @param {String} dataSetName - Name of data set\n   * @param {String} realName - Real name, i.e. file name of data set\n   * @param {Number} dataSourceId - Id of data source that data set is based on\n   * @param {String} description - Description of data set\n   * @param {Boolean} [toBeIngested=false] - To be ingested\n   * @param {Number} [refreshInterval=-1] - Refresh interval in minutes\n   * @param {String} [url=null] - URL\n   * @return {Promise.<Object>} Data set response\n   */\n  mod.create = function(dataSetName,\n          realName,\n          dataSourceId,\n          description,\n          toBeIngested,\n          refreshInterval,\n          url\n          ) {\n    if (toBeIngested === undefined) {\n      toBeIngested = false;\n    }\n\n    if (refreshInterval === undefined) {\n      refreshInterval = -1;\n    }\n\n    if (url === undefined) {\n      url = '';\n    }\n\n    var params = {\n      datasetname: dataSetName,\n      realname: realName,\n      iddatasource: dataSourceId,\n      description: description,\n      tobeingested: toBeIngested,\n      refreshinterval: refreshInterval,\n      url: url\n    };\n\n    return gsc.doPost('createdataset', params);\n\n  };\n\n  /**\n   * Update a data set\n   *\n   * @param {Number} dataSetId - Id of data set to update\n   * @param {String} dataSetName - Name of data set\n   * @param {String} realName - Real name of data set\n   * @param {Number} dataSourceId - Data source the data set is based on\n   * @param {String} description - Description of data set\n   * @param {Boolean} [toBeIngested=false] - Flag indicating whether data set is to be ingested\n   * @param {Number} [refreshInterval=-1] - Refresh interval in minutes\n   * @param {String} [url=null] - URL\n   * @return {Promise.<Object>} Update data set response\n   */\n  mod.update = function(\n          dataSetId,\n          dataSetName,\n          realName,\n          dataSourceId,\n          description,\n          toBeIngested,\n          refreshInterval,\n          url\n          ) {\n\n    if (toBeIngested === undefined) {\n      toBeIngested = false;\n    }\n\n    if (refreshInterval === undefined) {\n      refreshInterval = -1;\n    }\n\n    if (url === undefined) {\n      url = '';\n    }\n\n    var params = {\n      iddataset: dataSetId,\n      datasetname: dataSetName,\n      realname: realName,\n      iddatasource: dataSourceId,\n      description: description,\n      tobeingested: toBeIngested,\n      refreshinterval: refreshInterval,\n      url: url\n    };\n\n    return gsc.doPost('updatedataset', params);\n\n  };\n\n  /**\n   * List columns of data set\n   *\n   * @param {Number} dataSetId - Identifier of dataset\n   * @return {Promise.<Object>} Data set response\n   */\n  mod.listCols = function(dataSetId) {\n    return gsc.doPost('listcols', {\n      iddataset: dataSetId\n    });\n  };\n\n  /**\n   * Update column metadata\n   *\n   * @param {Number} dataSetId - Identifier of data set to update column metadata for\n   * @param {Object[]} columnList - List of column objects\n   * @returns {Promise.<Object>}\n   */\n  mod.updateCols = function(dataSetId, columnList) {\n    return gsc.doPost('updcolsmetadata', {\n      iddataset: dataSetId,\n      columns: columnList\n    });\n  };\n\n  mod.createCron = function(dataSetId) {\n    return gsc.doPost('createcron', {\n    });\n  };\n\n  return mod;\n}());\n\n'use strict';\n\ngsc.datasource = (function() {\n\n  /**\n   * @exports gsc/datasource\n   */\n  var mod = {};\n\n  /**\n   * Datasource type enumeration\n   * @readonly\n   * @enum {string}\n   */\n  mod.DatasourceType = {\n    /**\n     * Oracle database\n     * @type {String}\n     */\n    ORACLE: 'Oracle',\n    /**\n     * ESRI Shapefile\n     * @type {String}\n     */\n    SHAPE: 'Shape',\n    /**\n     * PostgreSQL+PostGIS database\n     * @type {String}\n     */\n    POSTGIS: 'PostGIS'\n  };\n\n  /**\n   * Datasource object\n   *\n   * @property {string} datasourcename - Indicates whether the Courage component is present.\n   * @property {number} organization - Indicates whether the Power component is present.\n   * @property {gsc.datasource.DatasourceType} type - Indicates whether the Wisdom component is present.\n   * @property {string} description - A description of the data source\n   * @property {string} updated - Time and date when the source was updated\n   * @property {string} [url] - URL of remote datasource\n   * @property {string} [username] - Username for database\n   * @property {string} [password] - Password for database\n   * @property {string} [ipaddress] - IP address of local database connection\n   * @property {number} [port] - Port number of database connection\n   * @property {string} [path] - Path to local datasource directory, name of database\n   * @class\n   */\n  mod.Datasource = function() {\n\n  };\n\n  /**\n   * Create datasource\n   *\n   * @param {String} datasourcename [description]\n   * @param {String} organization [description]\n   * @param {gsc.datasource.DatasourceType} type [description]\n   * @param {String} description [description]\n   * @param {String} updated [description]\n   * @param {String} url [description]\n   * @param {String} username [description]\n   * @param {String} password [description]\n   * @param {String} ipaddress [description]\n   * @param {String} schema [description]\n   * @param {String} port [description]\n   * @param {String} path [description]\n   * @return {Promise.<gsc.datasource.DataSource>} [description]\n   * @public\n   */\n  mod.create = function(datasourcename,\n    organization,\n    type,\n    description,\n    updated,\n    url,\n    username,\n    password,\n    ipaddress,\n    schema,\n    port,\n    path) {\n\n    return gsc.doPost('createdatasrc', {\n      datasourcename: datasourcename,\n      organization: organization,\n      type: type,\n      description: description,\n      updated: updated,\n      url: url,\n      username: username,\n      password: password,\n      ipaddress: ipaddress,\n      schema: schema,\n      port: port,\n      path: path\n    });\n\n  };\n\n  /**\n   * List datasources - one of datasourceId or organization must be specified.\n   * Organization may be combined with (partial) datasourceName queries\n   *\n   * @param {Number} [datasourceId=null] Identifier of datasource to be retrieved\n   * @param {Number} [organization=null] Whether to include details\n   * @param {String} [datasourceName=null] Name or partial name of datasource\n   * @param {Boolean} [includeDetail=false] Whether to include details\n   * @return {Promise.<Object>} A list of datasource objects\n   */\n  mod.list = function(\n    datasourceId,\n    organization,\n    datasourceName,\n    includeDetail) {\n\n    var params = {};\n\n    if (includeDetail === undefined) {\n      includeDetail = false;\n    }\n\n    params.detail = includeDetail;\n\n    if (!gsc.util.isNull(datasourceId)) {\n      params.iddatasource = datasourceId;\n    }\n\n    if (!gsc.util.isNull(datasourceName)) {\n      params.datasourcename = datasourceName;\n    }\n\n    if (!gsc.util.isNull(organization)) {\n      params.organization = organization;\n    }\n\n    if (params.iddatasource === undefined &&\n      params.organization === undefined) {\n      return gsc.util.errorPromise(\n        'Parameter datasourceId or organization must be present in request');\n    }\n\n    return gsc.doPost('listdatasrc', params);\n  };\n\n  /**\n   * Delete datasource\n   *\n   * @param {number} datasourceId - Identifier of datasource to be deleted\n   * @return {Promise.<Object>} The deleted datasource\n   */\n  mod.delete = function(datasourceId) {\n    return gsc.doPost('deletedatasrc', {\n      iddatasource: datasourceId\n    });\n  };\n\n  /**\n   * Update datasource\n   *\n   * @param {number} datasourceId [description]\n   * @param {String} datasourcename [description]\n   * @param {String} organization [description]\n   * @param {gsc.datasource.DatasourceType} type [description]\n   * @param {String} description [description]\n   * @param {String} updated [description]\n   * @param {String} url [description]\n   * @param {String} username [description]\n   * @param {String} password [description]\n   * @param {String} ipaddress [description]\n   * @param {String} schema [description]\n   * @param {String} port [description]\n   * @param {String} path [description]\n   * @return {Promise.<Response>} [description]\n   */\n  mod.update = function(datasourceId,\n    datasourcename,\n    organization,\n    type,\n    description,\n    updated,\n    url,\n    username,\n    password,\n    ipaddress,\n    schema,\n    port,\n    path) {\n    return gsc.doPost('updatedatasrc', {\n      iddatasource: datasourceId,\n      datasourcename: datasourcename,\n      organization: organization,\n      type: type,\n      description: description,\n      updated: updated,\n      url: url,\n      username: username,\n      password: password,\n      ipaddress: ipaddress,\n      schema: schema,\n      port: port,\n      path: path\n    });\n  };\n\n  /**\n   * List data source origin?\n   *\n   * @param {number} datasourceId The id of the data source to list origin for\n   * @return {Promise.<Response>} A response object\n   */\n  mod.listDataOrigin = function(datasourceId) {\n\n    return gsc.doPost('listdataorigin', {\n      iddatasource: datasourceId\n    });\n\n  };\n\n  return mod;\n\n}());\n\n'use strict';\n\ngsc.download = (function() {\n  /**\n   * @exports gsc/download\n   */\n  var mod = {};\n\n  /** @type ol.Map */\n  mod.olMap = null;\n\n  /** @type ol.Layer */\n  mod.layer = null;\n\n  /** @type Array.<ol.Feature> */\n  mod.selectedFeatures = null;\n\n  /** @type ol.interaction.Select */\n  mod.select = null;\n\n  /** @type ol.interaction.DragBox */\n  mod.dragBox = null;\n\n  mod.create = function(map, layer) {\n    mod.olMap = map;\n    mod.layer = layer;\n    mod.select = new ol.interaction.Select();\n    mod.olMap.addInteraction(mod.select);\n    mod.selectedFeatures = mod.select.getFeatures();\n    mod.dragBox = new ol.interaction.DragBox({\n      condition: ol.events.condition.platformModifierKeyOnly,\n      style: new ol.style.Style({\n        stroke: new ol.style.Stroke({\n          color: [0, 0, 255, 1]\n        })\n      })\n    });\n    mod.olMap.addInteraction(mod.dragBox);\n\n    mod.dragBox.on('boxend', function() {\n      var extent = mod.dragBox.getGeometry().getExtent();\n      mod.layer.getSource().forEachFeatureIntersectingExtent(\n          extent, function(feature) {\n            mod.selectedFeatures.push(feature);\n          });\n    });\n\n    mod.dragBox.on('boxstart', function() {\n      mod.selectedFeatures.clear();\n    });\n    mod.olMap.on('click', function() {\n      mod.selectedFeatures.clear();\n    });\n  };\n\n  mod.addLayer = function(layer) {\n    mod.removeLayer();\n    mod.layer = layer;\n  };\n\n  mod.removeLayer = function() {\n    mod.layer = null;\n  };\n\n  /**\n   * @returns {string} .kml string\n   */\n  mod.kml = function() {\n    var kml = new ol.format.KML();\n    return kml.writeFeatures(mod.selectedFeatures.getArray());\n  };\n\n  /**\n   * @param {ol.format.GML} gml\n   * @returns {string} .gml string\n   */\n  mod.gml = function(gml) {\n    return gml.writeFeatures(mod.selectedFeatures.getArray());\n  };\n\n  /**\n   * @returns {string} .gpx string\n   */\n  mod.gpx = function() {\n    var gpx = new ol.format.GPX();\n    return gpx.writeFeatures(mod.selectedFeatures.getArray());\n  };\n\n  /**\n   * @returns {string} .json string\n   */\n  mod.json = function() {\n    var json = new ol.format.GeoJSON();\n    return json.writeFeatures(mod.selectedFeatures.getArray());\n  };\n\n  /**\n   * @returns {string} .wkt string\n   */\n  mod.wkt = function() {\n    var wkt = new ol.format.WKT();\n    return wkt.writeFeatures(mod.selectedFeatures.getArray());\n  };\n\n  return mod;\n}());\n\n// jscs:disable disallowTrailingWhitespace\n'use strict';\n\ngsc.editFeatures = (function() {\n  /**\n   * @exports gsc/editFeatures\n   */\n  var mod = {};\n\n  /** @type divObject */\n  mod.container = null;\n\n  /** @type divObject */\n  mod.content = null;\n\n  /** @type aObject */\n  mod.closer = null;\n\n  /** Class of edit buttons */\n  mod.buttonClass = null;\n\n  /** @type ol.format.WFS */\n  mod.formatWFS = null;\n\n  /** @type ol.format.GML */\n  mod.formatGML = null;\n\n  /** @type ol.Layer */\n  mod.layer = null;\n\n  /** @type ol.Map */\n  mod.olMap = null;\n\n  /** Adress of WFS-T */\n  mod.wfs = null;\n\n  mod.selectedFeature = null;\n\n  var attTitle = [];\n\n  mod.editingFeature = {};\n\n  mod.interaction = null;\n\n  mod.popupContent = null;\n\n  mod.overlay = null;\n\n  mod.interactionSingleSelect = new ol.interaction.Select({\n    style: new ol.style.Style({\n      stroke: new ol.style.Stroke({\n        color: '#FF2828'\n      })\n    }),\n    toggleCondition: ol.events.condition.never\n  });\n\n  mod.interactionMultipleSelect = new ol.interaction.Select({\n    style: new ol.style.Style({\n      stroke: new ol.style.Stroke({\n        color: '#FF2828'\n      })\n    })\n  });\n\n  mod.interactionSnap = null;\n\n  mod.create = function(divContainer, divContent, aCloser,\n                        classButton, mapObject, wfs) {\n\n    mod.container = divContainer;\n\n    mod.content = divContent;\n\n    mod.closer = aCloser;\n\n    mod.buttonClass = classButton;\n\n    mod.formatWFS = new ol.format.WFS();\n\n    mod.olMap = mapObject;\n\n    mod.wfs = wfs;\n\n    /**\n     * Create an overlay to anchor the popup to the map.\n     */\n    mod.overlay = new ol.Overlay(/** @type {olx.OverlayOptions} */ ({\n      element: mod.container.get(0),\n      autoPan: true,\n      autoPanAnimation: {\n        duration: 250\n      }\n    }));\n\n    mod.olMap.addOverlay(mod.overlay);\n\n    /**\n     * Create an interaction to let select features at map by moving pointer.\n     */\n    mod.interactionMultipleSelectPointerMove = new ol.interaction.Select({\n      condition: ol.events.condition.pointerMove\n    });\n\n    mod.olMap.addInteraction(mod.interactionMultipleSelectPointerMove);\n\n    /**\n     * Add a click handler to hide the popup.\n     *\n     * @return {boolean} Don't follow the href.\n     */\n    mod.closer.click(function() {\n      mod.overlay.setPosition(undefined);\n      mod.closer.blur();\n      return false;\n    });\n  };\n\n  mod.addLayer = function(layer, gml) {\n    mod.removeLayer();\n    mod.layer = layer;\n    mod.changeSnapLayer();\n    mod.formatGML = gml;\n  };\n\n  mod.removeLayer = function() {\n    mod.layer = null;\n    mod.formatGML = null;\n  };\n\n  mod.changeSnapLayer = function() {\n    mod.interactionSnap = new ol.interaction.Snap({\n      pixelTolerance: 5,\n      source: mod.layer.getSource()\n    });\n  };\n\n  mod.transactWFS = function(mode, f) {\n    var node;\n    switch (mode) {\n      case 'insert':\n        node = mod.formatWFS.writeTransaction([f], null, null, mod.formatGML);\n        break;\n      case 'update':\n        var sF = f.clone();\n        sF.getGeometry().applyTransform(function(crd, crd2, std) {\n          for (var i = 0; i < crd.length; i += std) {\n            var y = crd[i];\n            var x = crd[i + 1];\n            crd[i] = x;\n            crd[i + 1] = y;\n          }\n        });\n        sF.setId(f.getId());\n        node = mod.formatWFS.writeTransaction(null, [sF], null, mod.formatGML);\n        break;\n      case 'delete':\n        node = mod.formatWFS.writeTransaction(null, null, [f], mod.formatGML);\n        break;\n    }\n    var xs = new XMLSerializer();\n    var payload = xs.serializeToString(node);\n    $.ajax(mod.wfs, {\n      type: 'POST',\n      dataType: 'xml',\n      processData: false,\n      contentType: 'text/xml',\n      data: payload\n    }).done(function() {\n      mod.layer.getSource().clear();\n    });\n  };\n\n  $('button').click(function() {\n    mod.olMap.removeInteraction(mod.interaction);\n    mod.interactionMultipleSelect.getFeatures().clear();\n    mod.interactionSingleSelect.getFeatures().clear();\n    mod.olMap.removeInteraction(mod.interactionMultipleSelect);\n    mod.olMap.removeInteraction(mod.interactionSingleSelect);\n\n    switch ($(this).attr('id')) {\n\n      case 'btnEdit':\n        mod.olMap.addInteraction(mod.interactionMultipleSelect);\n        mod.interaction = new ol.interaction.Modify({\n          features: mod.interactionMultipleSelect.getFeatures()\n        });\n        mod.olMap.addInteraction(mod.interaction);\n        mod.olMap.addInteraction(mod.interactionSnap);\n        mod.editingFeature = {};\n        mod.interactionMultipleSelect.getFeatures().on('add', function(e) {\n          e.element.on('change', function(e) {\n            mod.editingFeature[e.target.getId()] = true;\n          });\n        });\n        mod.interactionMultipleSelect.getFeatures().on('remove', function(e) {\n          var f = e.element;\n          if (mod.editingFeature[f.getId()]) {\n            delete mod.editingFeature[f.getId()];\n            var featureProperties = f.getProperties();\n            delete featureProperties.boundedBy;\n            var clone = new ol.Feature(featureProperties);\n            clone.setId(f.getId());\n            mod.transactWFS('update', clone);\n          }\n        });\n        break;\n\n      case 'btnEditAttributes':\n        mod.olMap.addInteraction(mod.interactionSingleSelect);\n        mod.interactionSingleSelect.on('select', function(evt) {\n          if (evt.selected.length == 1) {\n            mod.selectedFeature = evt.selected[0];\n            mod.popupContent = '';\n            attTitle = [];\n            mod.popupContent = '<table id=\"feature\" ' +\n                'class=\"table table-bordered table-hover\" ' +\n                'style=\"clear: both\"><tbody>';\n            Object.getOwnPropertyNames(mod.selectedFeature.getProperties()).\n            forEach(function(val, idx, array) {\n              if (val != 'bbox' && val != 'geometry') {\n                var i = 0;\n                attTitle.push(val);\n                mod.popupContent += '<tr>' +\n                    '<td width=\"35%\">' + val + '</td>' +\n                    '<td width=\"65%\">' +\n                    '<a href=\"#\" id=\"' + val + '\" class=\"edit' + i + '\" ' +\n                    'data-type=\"text\">' + mod.selectedFeature.\n                    getProperties()[val] +\n                    '</a>' +\n                    '</td>' +\n                    '</tr>';\n                i++;\n              }\n            });\n            mod.popupContent += '</tbody></table><script>';\n            mod.popupContent += '$.fn.editable.defaults.mode = \"inline\";';\n            mod.popupContent += '$(document).ready(function() {';\n            attTitle.forEach(function(val, idx, array) {\n              mod.popupContent += '\t$(\".edit' + idx + '\").editable({';\n              mod.popupContent += 'type: \"text\",';\n              mod.popupContent += 'title: \"' + attTitle[idx] + '\",';\n              mod.popupContent += 'success: function(response, newValue) {';\n              mod.popupContent += 'gsc.editFeatures.selectedFeature.set(\"' +\n                  attTitle[idx] + '\", newValue, false);';\n              mod.popupContent += 'gsc.editFeatures.transactWFS(\"update\", ' +\n                  'gsc.editFeatures.selectedFeature);';\n              mod.popupContent += '}';\n              mod.popupContent += '})';\n            });\n            mod.popupContent += '});</script>';\n            mod.content.html(mod.popupContent);\n            var popupCoordinates = mod.selectedFeature.getGeometry().\n            getClosestPoint(evt.mapBrowserEvent.coordinate);\n            mod.overlay.setPosition(popupCoordinates);\n          }\n        });\n        break;\n\n      case 'btnPoint':\n        mod.interaction = new ol.interaction.Draw({\n          type: 'Point',\n          source: mod.layer.getSource()\n        });\n        mod.olMap.addInteraction(mod.interaction);\n        mod.olMap.addInteraction(mod.interactionSnap);\n        mod.interaction.on('drawend', function(e) {\n          mod.transactWFS('insert', e.feature);\n        });\n        break;\n\n      case 'btnLine':\n        mod.interaction = new ol.interaction.Draw({\n          type: 'LineString',\n          source: mod.layer.getSource()\n        });\n        mod.olMap.addInteraction(mod.interaction);\n        mod.olMap.addInteraction(mod.interactionSnap);\n        mod.interaction.on('drawend', function(e) {\n          mod.transactWFS('insert', e.feature);\n        });\n        break;\n\n      case 'btnArea':\n        mod.interaction = new ol.interaction.Draw({\n          type: 'Polygon',\n          source: mod.layer.getSource()\n        });\n        mod.interaction.on('drawend', function(e) {\n          mod.transactWFS('insert', e.feature);\n        });\n        mod.olMap.addInteraction(mod.interaction);\n        mod.olMap.addInteraction(mod.interactionSnap);\n        break;\n\n      case 'btnDelete':\n        mod.interaction = new ol.interaction.Select();\n        mod.interaction.getFeatures().on('add', function(e) {\n          mod.transactWFS('delete', e.target.item(0));\n          mod.interactionMultipleSelectPointerMove.getFeatures().clear();\n          mod.interaction.getFeatures().clear();\n        });\n        mod.olMap.addInteraction(mod.interaction);\n        mod.olMap.addInteraction(mod.interactionSnap);\n        break;\n\n      default:\n        break;\n    }\n  });\n  return mod;\n}());\n\n'use strict';\n\nvar gsc = gsc || {};\n\ngsc.geocode = gsc.geocode || {};\n\n/**\n * Get a list of coordinates for a name\n *\n * @param {String[]} geonames An array of one or more geonames\n */\ngsc.geocode.geocode = function(geonames) {\n\n  // pseudo code\n  // lookup coordinate based on name\n\n  return [{\n    name: 'Brussels',\n    lon: 1,\n    lat: 2,\n    match: 50 // percent\n  }];\n\n};\n\n/**\n * Get a list of names for a coordinate\n *\n * @param {Number} lat Latitude\n * @param {Number} lon Longitude\n * @param {Number} srs Spatial reference system code (EPSG)\n */\ngsc.geocode.reverseGeocode = function(lat, lon, srs) {\n\n  // pseudo code\n  // lookup name based on location\n\n  return [{\n    name: 'Brussels',\n    lon: 1,\n    lat: 2,\n    distance: 100 // meters\n  }];\n\n};\n\n'use strict';\n\nvar gsc = gsc || {};\n\n/**\n * Response object\n *\n * @param {string} [status] [description]\n * @param {string} [description] [description]\n *\n * @property {string} status - Whether the request was successful (done) or failed (error)\n * @property {string} description - Any error or status message\n * @property {Object} request - The request object\n * @property {number} [id] - Identifier of inserted object, only available on create statements\n * @class\n * @memberof gsc\n */\ngsc.Response = function(status, description) {\n\n  if (status === undefined) {\n    status = 'error';\n  }\n\n  if (description === undefined) {\n    description = '';\n  }\n\n  return {\n    status: status,\n    description: description\n  };\n\n};\n\n'use strict';\n\ngsc.layer = (function() {\n\n  /**\n   * @exports gsc/layer\n   */\n  var mod = {};\n\n  /**\n   * Create a new layer\n   *\n   * @param {String} layerName - The name of the layer\n   * @param {Number} dataSetId - The identifier of the data set the layer is based on\n   * @param {String} description - A description of the layer\n   * @param {String} metadataFile - Metadata XML\n   * @param {String} sld - SLD XML\n   * @returns {Promise.<Object>}\n   */\n  mod.create = function(layerName,\n      dataSetId,\n      description,\n      metadataFile,\n      sld) {\n\n    return gsc.doPost('createlyr', {\n      layername: layerName,\n      iddataset: dataSetId,\n      description: description,\n      metadatafile: metadataFile,\n      sld: sld\n    });\n\n  };\n\n  /**\n   * Update a layer new layer\n   *\n   * @param {type} layerId - The identifier of the layer to update\n   * @param {String} layerName - The name of the layer\n   * @param {Number} dataSetId - The identifier of the data set the layer is based on\n   * @param {String} description - A description of the layer\n   * @param {String} metadataFile - Metadata XML\n   * @param {String} sld - SLD XML\n   * @returns {Promise.<Object>}\n   */\n  mod.update = function(layerId,\n      layerName,\n      dataSetId,\n      description,\n      metadataFile,\n      sld) {\n\n    return gsc.doPost('updatelyr', {\n      idlayer: layerId,\n      layername: layerName,\n      iddataset: dataSetId,\n      description: description,\n      metadatafile: metadataFile,\n      sld: sld\n    });\n\n  };\n\n  /**\n   * Delete a layer\n   *\n   * @param {Number} layerId - The identifier of the layer to delete\n   * @returns {Promise.<Object>}\n   */\n  mod.delete = function(layerId) {\n    return gsc.doPost('deletelyr', {\n      idlayer: layerId\n    });\n  };\n\n  /**\n   * Search for layers\n   *\n   * @param {Number} [dataSetId=null] - The identifier of the data set for which layers should be retrieved\n   * @param {type} [layerId=null] - The identifier of the layer that should be retrieved\n   * @param {type} [layerName=null] - The name or partial name of layers to be retrieved\n   * @returns {jqXHR|!jQuery.jqXHR|Promise.<Object>}\n   */\n  mod.list = function(dataSetId,\n      layerId,\n      layerName) {\n\n    var param = {};\n\n    if (dataSetId !== undefined && dataSetId !== null) {\n      param.iddataset = dataSetId;\n    }\n\n    if (layerId !== undefined && layerId !== null) {\n      param.idlayer = layerId;\n    }\n\n    if (layerName !== undefined && layerName !== null) {\n      param.layername = layerName;\n    }\n\n    return gsc.doPost('listlyr', param);\n\n  };\n\n  return mod;\n\n}());\n\n'use strict';\n\ngsc.map = (function() {\n\n  /**\n   * @exports gsc/map\n   */\n  var mod = {};\n\n  /** @type ol.map */\n  mod.olMap = null;\n\n  /** @type mapOptions */\n  mod.mapOptions_ = null;\n\n  /**\n   * Create a map with standard functions (pan,zoom, view layers) and\n   * other optional  specific functionality as info on feature and filter\n   * on attributes\n   *\n   * @param {divObject} divObject is the map div\n   * @param {mapOptions} mapOptions are the map options\n   */\n  mod.create  = function(divObject, mapOptions) {\n    mod.mapOptions_ = mapOptions;\n    mod.layers_ = mapOptions.layers || [];\n\n    var projection = new ol.proj.Projection({\n      code: mapOptions.epsg,\n      units: mapOptions.units\n    });\n\n    mod.olMap = new ol.Map({\n      controls: ol.control.defaults({\n        attribution: false\n      }),\n      layers: mod.layers_,\n      target: divObject,\n      view: new ol.View({\n        projection: projection\n      })\n    });\n\n    if (mod.mapOptions_.bounds) {\n      mod.olMap.getView().fit(mod.mapOptions_.bounds, mod.olMap.getSize());\n    }\n  };\n\n  /**\n   * Add layer to existing map\n   *\n   * @param {ol.layer} layer layer to show in map\n   */\n  mod.addLayer = function(layer) {\n    mod.olMap.addLayer(layer);\n    mod.layers_.push(layer);\n  };\n\n  /**\n   * Return element of map viewport\n   *\n   * @return {element} DOM element of viewport\n   */\n  mod.getDomElement = function() {\n    return $(mod.olMap.getViewport());\n  };\n\n  /**\n   * Return ol map object\n   *\n   * @return {ol.map} map object\n   */\n  mod.getOlMap = function() {\n    return mod.olMap;\n  };\n\n  /**\n   * Redraw all layers\n   *\n   */\n  mod.redraw = function() {\n    mod.olMap.getLayers().forEach(function(lyr) {\n      lyr.redraw();\n    });\n  };\n\n  /**\n   * Remove layer from map\n   *\n   */\n  mod.removeLayer = function(layer) {\n    mod.olMap.removeLayer(layer);\n    mod.layers_ = mod.layers_.filter(function(value) {\n      return value !== layer;\n    });\n  };\n\n  /**\n   * Fit to features\n   *\n   * @param {el.extent} bounds\n   */\n  mod.fit = function(bounds) {\n    mod.olMap.getView().fit(bounds, mod.olMap.getSize());\n  };\n\n  mod.addMousePositionControl = function(location) {\n    var mousePositionControl = new ol.control.MousePosition({\n        className: 'custom-mouse-position',\n        target: document.getElementById(location),\n        coordinateFormat: ol.coordinate.createStringXY(5),\n        undefinedHTML: '&nbsp;'\n      });\n    mod.olMap.addControl(mousePositionControl);\n  };\n\n  mod.addScaleBarControl = function(scalediv) {\n    mod.olMap.getView().on('change:resolution', function(evt) {\n      var resolution = evt.target.get('resolution');\n      var units = mod.olMap.getView().getProjection().getUnits();\n      var dpi = 25.4 / 0.28;\n      var mpu = ol.proj.METERS_PER_UNIT[units];\n      var scale = resolution * mpu * 39.37 * dpi;\n      if (scale >= 9500 && scale <= 950000) {\n        scale = Math.round(scale / 1000) + 'K';\n      } else if (scale >= 950000) {\n        scale = Math.round(scale / 1000000) + 'M';\n      } else {\n        scale = Math.round(scale);\n      }\n      document.getElementById(scalediv).innerHTML = 'Scale = 1 : ' + scale;\n    });\n    //fire change resolution event and restore previous configuration\n    mod.olMap.getView().setZoom(mod.olMap.getView().getZoom() + 1);\n    mod.olMap.getView().setZoom(mod.olMap.getView().getZoom() - 1);\n  };\n\n  mod.infoOnFeatureEvent = function(evt) {\n    document.getElementById(this.nodelist).innerHTML = 'Loading... please ' +\n    'wait...';\n    var view = mod.olMap.getView();\n    var viewResolution = view.getResolution();\n    var source = this.layer.getSource();\n    var url = source.getGetFeatureInfoUrl(\n      evt.coordinate, viewResolution, view.getProjection(),\n      {'INFO_FORMAT': 'text/html',\n             'FEATURE_COUNT': this.maxFeaturesNumber\n      });\n    if (url) {\n      document.getElementById(this.nodelist).innerHTML = '<iframe seamless ' +\n      'src=\"' + url + '\"></iframe>';\n    }\n  };\n\n  mod.addInfoOnFeatureEvent = function(nodelist, maxFeaturesNumber, layer) {\n    var opts = {\n      nodelist: nodelist,\n      maxFeaturesNumber: maxFeaturesNumber,\n      layer: layer\n    };\n    mod.olMap.on('singleclick', mod.infoOnFeatureEvent, opts);\n  };\n\n  mod.removeInfoOnFeatureEvent = function() {\n    mod.olMap.on('singleclick', mod.infoOnFeatureEvent);\n  };\n\n  mod.filterOnAttributes = function(filterType, filter) {\n    // by default, reset all filters\n    var filterParams = {\n          'FILTER': null,\n          'CQL_FILTER': null,\n          'FEATUREID': null\n        };\n    if (filter.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '') !== '') {\n      if (filterType === 'cql') {\n        filterParams.CQL_FILTER = filter;\n      }\n      if (filterType === 'ogc') {\n        filterParams.FILTER = filter;\n      }\n      if (filterType === 'fid') {\n        filterParams.FEATUREID = filter;\n      }\n    }\n    // merge the new filter definitions\n    mod.olMap.getLayers().forEach(function(lyr) {\n            lyr.getSource().updateParams(filterParams);\n          });\n  };\n\n  mod.resetFilter = function() {\n    mod.filterOnAttributes('cql','');\n  };\n\n  return mod;\n\n}());\n\n'use strict';\ngsc.organization = (function() {\n\n  /**\n   * @exports gsc/organization\n   */\n  var mod = {};\n\n  /**\n   * Create a new organization\n   *\n   * @param {type} organizationname\n   * @param {type} description\n   * @returns {Promise.<Object>}\n   */\n  mod.create = function(organizationname, description) {\n    return gsc.doPost('createorg', {\n      organizationname: organizationname,\n      description: description\n    });\n  };\n\n  /**\n   * List/search for organizations\n   *\n   * @param {type} [organizationname] - Optionally name of organization\n   * @returns {Promise.<Object>}\n   */\n  mod.list = function(organizationname) {\n    var param = {};\n    if (organizationname !== null && organizationname !== undefined) {\n      param.organizationname = organizationname;\n    }\n    return gsc.doPost('listorg', param);\n  };\n\n  /**\n   * Delete organization\n   *\n   * @param {type} organizationId\n   * @returns {Promise.<Object>}\n   */\n  mod.delete = function(organizationId) {\n    return gsc.doPost('deleteorg', {\n      idorganization: organizationId\n    });\n  };\n\n  /**\n   * Updatea an organization object\n   *\n   * @param {type} organizationId\n   * @param {type} organizationname\n   * @param {type} description\n   * @returns {jqXHR|!jQuery.jqXHR|Promise.<Object>}\n   */\n  mod.update = function(organizationId, organizationname, description) {\n    return gsc.doPost('updateorg', {\n      idorganization: organizationId,\n      organizationname: organizationname,\n      description: description\n    });\n  };\n\n  return mod;\n\n}());\n\n'use strict';\n\nvar gsc = gsc || {};\n\ngsc.routing = gsc.routing || {};\n\n/**\n * Get a vector layer with the root\n *\n * @param {double} x1 coordinate of the start point\n * @param {double} y1 coordinate of the start point\n * @param {double} x2 coordinate of the end point\n * @param {double} y2 coordinate of the end point\n */\ngsc.routing.routing = function(x1, y1, x2, y2) {\n\n  var RoutingUrl = 'http:/hub.geosmartcity.eu' +\n  //var RoutingUrl = 'http://localhost:8080' +\n   '/GironaRouting/geo/RestService/getroute?';\n\n  RoutingUrl += ('x1=' + x1 + '&y1=' + y1 + '&x2=' + x2 + '&y2=' +  y2);\n  console.log(RoutingUrl);\n\n  var\tvectorLayer = new ol.layer.Vector({\n    source: new ol.source.Vector({\n      url: RoutingUrl,\n      format: new ol.format.GeoJSON()\n    })\n  });\n  return vectorLayer;\n};\n\n\n'use strict';\n\nvar gsc = gsc || {};\n\n/**\n * <p>API for crowd sourcing feature of gsc.js library</p>\n * <p>Functions to handle server side crowd sourcing app.</p>\n *\n * @namespace gsc.upload\n * @requires jQuery-2.1.4\n */\ngsc.upload = {\n  /**\n   * Version number of the uploading feature of gsc.js\n   * @type {String}\n   */\n  version: '1.0.0',\n  /**\n   * Byte size of the uploading file\n   * @type {Number}\n   */\n  fileSize: 8000000\n};\n\ngsc.upload.uploadForm = function(selector) {\n  var html =\n      `<div class='upload'>\n        <form role='form'>\n          <h4>Upload file</h4>\n          <div class='upload-file'>\n            <div class='input-group'>\n              <span class='input-group-btn'>\n            <span class='btn btn-primary btn-file'>\n            Browse... \n            <input type='file' required='true' id='geometryFile' accept='.gml, .kml, .zip'>\n            </span>\n              </span>\n              <input type='text' class='form-control' style='width: 20%'\n                readonly>\n            </div>\n            <span class='help-block'>\n            Select .gml, .kml, .zip (containing .shp, .shx, and .dbf )  \n            </span>\n          </div>\n          <div class='epsg'>\n            <div class='input-group'>\n              <span class='input-group-addon' id='basic-addon1'>&#128196;\n            </span>\n              <input type='text' required='true' id='epsg' class='form-control numbersOnly'\n                style='width: 20%' placeholder='EPSG'\n                aria-describedby='basic-addon1'>\n            </div>\n            <span class='help-block'>\n            Provide EPSG for the reference system\n            </span>\n          </div>\n          <div class='building-height collapse'>\n            <div class='input-group'>\n              <span class='input-group-addon' id='basic-addon1'>&#127970;\n            </span>\n              <input type='text' required='true' id='height' class='form-control numbersOnly'\n                style='width: 20%' placeholder='Height'\n                aria-describedby='basic-addon1'>\n            </div>\n            <span class='help-block'>\n            Provide height of the building in meters\n            </span>\n          </div>\n          <div class='inspireIdLoc'>\n            <div class='input-group'>\n              <span class='input-group-addon' id='basic-addon1'>&#128448;\n            </span>\n              <input type='text' id='inspireIdLoc' class='form-control'\n                style='width: 20%'\n                aria-describedby='basic-addon1'>\n            </div>\n            <span class='help-block'>\n            Field that contains the localId for Inspire\n            </span>\n          </div>\n          <div class='inspireIdName'>\n            <div class='input-group'>\n              <span class='input-group-addon' id='basic-addon1'>&#128448;\n            </span>\n              <input type='text' id='inspireIdName' class='form-control'\n                style='width: 20%'\n                aria-describedby='basic-addon1'>\n            </div>\n            <span class='help-block'>\n            Field that contains the namespace for Inspire\n            </span>\n          </div>\n          <button type='submit' class='btn btn-primary '>Submit</button>\n        </form>\n        <div class='progress'>\n          <div class='progress-bar' aria-valuenow='0'\n            aria-valuemin='0' aria-valuemax='100'\n            id='progressbar' style='min-width: 2em; width: 0'>0%</div>\n        </div>\n        <div class='alert collapse' id='alert' role='alert'>...</div>\n      </div>`      ;\n  jQuery(selector).html(html);\n\n  var script =\n      `<script>\n      jQuery(document).on('change', '.btn-file :file', function() {\n        var input = jQuery(this); \n        var label = input.val();\n        if (label.substring(3, 11) == 'fakepath') {\n          label = label.substring(12);\n        }\n        input.trigger('fileselect', [label]);\n      });\n      \n      jQuery(document).ready(function() {\n        jQuery('.btn-file :file').on('fileselect', function(event,\n          label) {\n          jQuery('#progressbar').width('0%').text('0%');\n          jQuery('#alert').addClass('collapse').removeClass(\n            'alert-danger alert-success').text('');\n          var input = jQuery(this).parents('.input-group').find(\n            ':text');\n          var extension = label.substr(-3, 3);\n          if (extension === 'zip' || extension === 'gml') {\n            jQuery('.building-height').removeClass('collapse');\n          } else {\n            jQuery('.building-height').addClass('collapse');\n          }\n          if (input.length) {\n            input.val(label);\n          } else {\n            if (label) {\n              alert(label);\n            }\n          }\n        });\n      });\n      \n      jQuery('.numbersOnly').keyup(function() {\n        if (jQuery.isNumeric(this.value) === false) {\n          this.value = this.value.slice(0, -1);\n        }\n      });\n      \n      progressCallback = function(progress) {\n        if (progress > 0) {\n          jQuery('#progressbar').width(progress + '%').text(progress +\n            ' %');\n        }\n      };\n      \n      successCallback = function(success) {\n        jQuery('#alert').removeClass('collapse').addClass('alert-success')\n          .text('Upload successful');\n      };\n      \n      failedCallback = function(error) {\n        if(error == undefined){\n            error = '';\n        }\n        jQuery('#alert').removeClass('collapse').addClass('alert-danger')\n          .text('Upload failed ' + error);\n      };\n      \n      jQuery('form').on('submit', function(e) {\n        e.preventDefault();\n        jQuery('#progressbar').width('0%').text('0%');\n        jQuery('#alert').addClass('collapse').removeClass(\n          'alert-danger alert-success').text('');\n        var fileToProcess = document.getElementById('geometryFile').files[\n          0];\n        var height = jQuery('#height').val();\n        var epsg = jQuery('#epsg').val();\n        var inspireIdLoc = jQuery('#inspireIdLoc').val();\n        var inspireIdName = jQuery('#inspireIdName').val();\n        var dataToProcess = new gsc.upload.Data(fileToProcess, epsg, height, inspireIdLoc, inspireIdName);\n        dataToProcess.send(progressCallback, successCallback, failedCallback);\n      });\n      </script>`      ;\n  jQuery(function() {\n    jQuery('head').append(script);\n  });\n\n  jQuery('.btn-file').css({\n    'position': 'relative',\n    'overflow': 'hidden'\n  });\n  jQuery('.btn-file input[type=file]').css({\n    'position': 'absolute',\n    'top': '0',\n    'right': '0',\n    'min-width': '100%',\n    'min-height': '100%',\n    'font-size': '100px',\n    'text-align': 'right',\n    'filter': 'alpha(opacity=0)',\n    'opacity': '0',\n    'background': 'red',\n    'cursor': 'inherit',\n    'display': 'block'\n  });\n  jQuery('input[readonly]').css({\n    'background-color': 'white !important',\n    'cursor': 'text !important'\n  });\n  jQuery('.upload').css({\n    'margin': '2em'\n  });\n  jQuery('.progress').css({\n    'margin-top': '1em',\n    'width': '25%'\n  });\n  jQuery('.alert').css({\n    'margin-top': '1em',\n    'width': '25%'\n  });\n};\n\n/**\n * Create a Data with uploaded file and building height\n *\n * @param {File} file First element of FileList provided by input type file\n * @param {Number} epsg EPSG for the reference system of data\n * @param {String} [height] Height in meters of the building\n * @param {String} [inspireIdLoc] Field that contains the localId for Inspire\n * @param {String} [inspireIdName] Field that contains the namespace for Inspire\n * @constructor\n */\ngsc.upload.Data = function(file, epsg, height, inspireIdLoc, inspireIdName) {\n  /**\n   * File to send\n   * @type {File}\n   */\n  if (typeof file === undefined) {\n    this.file = new File([''], 'filename');\n  } else {\n    this.file = file;\n  }\n  /**\n   * EPSG for the reference system\n   * @type {String}\n   */\n  this.epsg = epsg;\n  /**\n   * Height of the building (for solar potential calculation) in meters\n   * @type {String}\n   */\n  this.height = height;\n  /**\n   * Name of the field that contains the localId for Inspire\n   * @type {String}\n   */\n  this.inspireIdLoc = inspireIdLoc;\n  /**\n   * Name of the field that contains the namespace for Inspire\n   * @type {String}\n   */\n  this.inspireIdName = inspireIdName;\n};\n\n/**\n * The name of the file referenced by the File object\n * @property {String} name of the file\n * @name gsc.upload.Data#name\n */\nObject.defineProperty(gsc.upload.Data.prototype, 'name', {\n  get: function() {\n    return this.file && this.file.name;\n  }\n});\n\n/**\n * Returns the last modified date of the file.\n * Files without a known last modified date use the current date instead\n * @property {Date} last modified date\n * @name gsc.upload.Data#lastModifiedDate\n */\nObject.defineProperty(gsc.upload.Data.prototype, 'lastModifiedDate', {\n  get: function() {\n    return this.file && this.file.lastModifiedDate;\n  }\n});\n\n/**\n * The size, in bytes, of the data contained in the file\n * @property {Number} size in bytes\n * @name gsc.upload.Data#size\n */\nObject.defineProperty(gsc.upload.Data.prototype, 'size', {\n  get: function() {\n    return this.file && this.file.size;\n  }\n});\n\n/**\n * A string indicating the MIME type of the data contained in the Blob.\n * If the type is unknown, this string is empty\n * @property {String} MIME type\n * @name gsc.upload.Data#type\n */\nObject.defineProperty(gsc.upload.Data.prototype, 'type', {\n  get: function() {\n    return this.file && this.file.type;\n  }\n});\n\n/**\n * Checks if size of file to be uploaded is smaller or equals to\n * config {@link gsc.upload#fileSize}\n *\n * @returns {Boolean} True if file size is smaller or equals to config\n */\ngsc.upload.Data.prototype.isFileSizeCorrect = function() {\n  return (this.size <= gsc.upload.fileSize);\n};\n\n/**\n * Callback for handling upload progress percentage\n *\n * @callback progressCallback\n * @param {number} Percentage\n */\n\n/**\n * Callback for handling upload success\n *\n * @callback successCallback\n * @param {event}\n */\n\n/**\n * Callback for handling upload failure\n *\n * @callback failedCallback\n * @param {event}\n */\n/**\n * Function\n *\n * @param {progressCallback} pc Callback that handles upload progress\n * @param {successCallback} sc Callback that handles upload success\n * @param {failedCallback} fc Callback that handles upload failure\n */\ngsc.upload.Data.prototype.send = function(pc, sc, fc) {\n  if (this.isFileSizeCorrect()) {\n    var formData = new FormData();\n    formData.append('file', this.file, this.name);\n    formData.append('epsg', this.epsg);\n    formData.append('fieldHeight', this.height);\n    formData.append('fieldInspireIdLoc', this.inspireIdLoc);\n    formData.append('fieldInspireIdName', this.inspireIdName);\n    var request = new XMLHttpRequest();\n    if (pc || typeof pc === 'function') {\n      request.upload.addEventListener('progress', function(e) {\n        pc(parseInt(e.loaded / e.total * 100));\n      }, false);\n    }\n    if (sc || typeof sc === 'function') {\n      request.upload.addEventListener('load', function(e) {\n        sc(e);\n      }, false);\n    }\n    if (fc || typeof fc === 'function') {\n      request.upload.addEventListener('error', function() {\n        if (request.status === 400) {\n          fc('Format not supported');\n        } else {\n          fc();\n        }\n      }, false);\n    }\n    request.open('POST', gsc.uploadUrl(), true);\n    request.send(formData);\n  }\n};\n\n'use strict';\n\ngsc.user = (function() {\n\n  /**\n   *\n   * @exports gsc/user\n   */\n  var mod = {};\n\n  /**\n   * Register a new user\n   *\n   * @param {String} email [description]\n   * @param {String} username [description]\n   * @param {String} password [description]\n   * @param {String} confirmpassword [description]\n   * @param {Object[]} organizations [description]\n   * @return {Promise.<Object>} [description]\n   */\n  mod.register = function(email,\n    username,\n    password,\n    confirmpassword,\n    organizations) {\n\n    return gsc.doPost('reguser', {\n      email: email,\n      username: username,\n      password: password,\n      confirmpassword: confirmpassword,\n      organizations: organizations\n    });\n\n  };\n\n  /**\n   * Authenticate a user\n   *\n   * @param {string} username - Username\n   * @param {string} password - Password\n   * @return {Promise.<Response.<User>>} User object\n   */\n  mod.login = function(username, password) {\n    return gsc.doPost('login', {\n      username: username,\n      password: password\n    });\n  };\n\n  /**\n   * Delete a user\n   *\n   * @param {String} username User name\n   * @param {String} password Password\n   * @return {Promise.<Object>}\n   */\n  mod.delete = function(username, password) {\n    return gsc.doPost('unreguser', {\n      username: username,\n      password: password\n    });\n  };\n\n  /**\n   * Get a password reminder\n   * If both arguments are supplied, email takes presedent\n   *\n   * @param {string} email - E-mail of user to get reminder for\n   * @param {string} username - Username of user to get reminder for\n   * @return {Promise} [description]\n   */\n  mod.remindPassword = function(email, username) {\n\n    var params = {};\n\n    if (email !== undefined && email !== null) {\n      params.email = email;\n    } else if (username !== undefined && username !== null) {\n      params.username = username;\n    }\n\n    return gsc.doPost('remindpwd', params);\n\n  };\n\n  /**\n   * Change password for user\n   *\n   * @param {string} username [description]\n   * @param {string} oldpassword [description]\n   * @param {string} newpassword [description]\n   * @param {string} confirmnewpassword [description]\n   * @return {Promise} [description]\n   */\n  mod.changePassword = function(username,\n    oldpassword,\n    newpassword,\n    confirmnewpassword) {\n\n    return gsc.doPost('changepwd', {\n      username: username,\n      oldpassword: oldpassword,\n      newpassword: newpassword,\n      confirmnewpassword: confirmnewpassword\n    });\n\n  };\n\n  /**\n   * Update user\n   *\n   * @param {number} userId Id of user to update\n   * @return {Promise.<Object>} Updated user object\n   */\n  mod.update = function(userId, email, username, organizations) {\n\n    return gsc.doPost('updateuser', {\n      id: userId,\n      email: email,\n      username: username,\n      organizations: organizations\n    });\n\n  };\n\n  /**\n   * Lock user\n   *\n   * @param {string} username Username\n   * @param {boolean} [lock=true] Boolean flag to lock user\n   * @return {Promise.<Object>}\n   */\n  mod.lock = function(username, lock) {\n\n    if (lock === undefined) {\n      lock = true;\n    }\n\n    return gsc.doPost('lockuser', {\n      username: username,\n      lock: lock\n    });\n\n  };\n\n  /**\n   * Verify registered email\n   *\n   * @param {number} verificationId Id to confirm - sent to registerred email\n   * @return {Promise.<Object>}\n   */\n  mod.verifyEmail = function(verificationId) {\n\n    return gsc.doPost('verifymail', {\n      id: verificationId\n    });\n\n  };\n\n  return mod;\n\n}());\n\n'use strict';\n\nvar gsc = gsc || {};\n\ngsc.usrdat = gsc.usrdat || {};\n\n/**\n * Store a location to the user profile\n *\n * @param {gsc.usrdat.Location} location A location to store\n * @return {gsc.usrdat.Location} The inserted location\n */\ngsc.usrdat.storeLocation = function(location) {\n\n  return {\n\n  };\n};\n\ngsc.usrdat.storeRoute = function(route) {\n\n};\n\n'use strict';\n\ngsc.util = gsc.util || {};\n\n/**\n * Returns a resolved promise object\n *\n * @param {string} message [description]\n * @return {Promise.<gsc.Response>} [description]\n * @memberof gsc.util\n */\ngsc.util.errorPromise = function(message) {\n  var p = jQuery.Deferred();\n  p.resolve(new gsc.Response('error', message));\n  return p;\n};\n\n'use strict';\n\ngsc.util = gsc.util || {};\n\n/**\n * Checks if a variable is an array and contains at least one element\n *\n * @param {Array|Object|null|undefined} arrayCandidate\n * @returns {Boolean} True if array with >= 1 entry, false otherwise\n */\ngsc.util.isArrayWithContent = function(arrayCandidate) {\n  if (arrayCandidate !== undefined &&\n          jQuery.isArray(arrayCandidate) &&\n          arrayCandidate.length > 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * Clears an existing array and adds all elements from another array into it.\n * Modifies the targetArray.\n *\n * @param {Object[]} targetArray\n * @param {Object[]} sourceArray\n */\ngsc.util.clearExtendArray = function(targetArray, sourceArray) {\n  targetArray.length = 0;\n  jQuery.extend(targetArray, sourceArray);\n};\n\n/**\n * Clears all the properties of the target object and copies the properties\n * from the source object onto the target. Modifies the target object.\n *\n * @param {type} targetObject\n * @param {type} sourceObject\n */\ngsc.util.clearExtendObject = function(targetObject, sourceObject) {\n  jQuery.each(targetObject, function(key, value) {\n    targetObject[key] = undefined;\n  });\n  jQuery.extend(targetObject, sourceObject);\n};\n\n'use strict';\n/**\n * @namespace gsc.util\n */\n\ngsc.util = gsc.util || {};\n\n/**\n * Checks whether a response is an error or not\n *\n * @param {Object} response The variable to test\n * @return {Boolean} True if response status is 'error',\n * false if response status is not 'error' or missing\n * @memberof gsc.util\n */\ngsc.util.isError = function(response) {\n\n  if (response.status !== undefined && response.status === 'error') {\n    return true;\n  }\n\n  return false;\n\n};\n\n'use strict';\n\ngsc.util = gsc.util || {};\n\n/**\n * Checks whether a variable is undefined or null\n *\n * @param {Mixed} mvar The variable to test\n * @return {Boolean} True if null, false if non-null\n * @memberof gsc.util\n */\ngsc.util.isNull = function(mvar) {\n\n  if (mvar !== undefined && mvar !== null) {\n    return false;\n  } else {\n    return true;\n  }\n\n};\n"]}